{"ast":null,"code":"const API_URL=process.env.REACT_APP_API_URL;export async function listFiles(){const resp=await fetch(\"\".concat(API_URL,\"/files\"));const data=await resp.json();// If files is an array of strings, convert to array of objects with dummy size/lastModified\nif(Array.isArray(data.files)&&typeof data.files[0]==='string'){return{files:data.files.map(f=>({key:f,size:'-',lastModified:'-'}))};}return data;}export async function uploadFile(file){const formData=new FormData();formData.append('file',file);// Add filename as query param\nconst filename=encodeURIComponent(file.name);return fetch(\"\".concat(API_URL,\"/files?filename=\").concat(filename),{method:'POST',body:formData});}export async function deleteFiles(fileKeys){// If only one file, pass as single filename param\nif(fileKeys.length===1){const filename=encodeURIComponent(fileKeys[0]);return fetch(\"\".concat(API_URL,\"/files?filename=\").concat(filename),{method:'DELETE',headers:{'Content-Type':'application/json'},body:JSON.stringify({files:fileKeys})});}else{// For multiple files, pass all as repeated query params (or just use body as before)\nconst query=fileKeys.map(f=>\"filename=\".concat(encodeURIComponent(f))).join('&');return fetch(\"\".concat(API_URL,\"/files?\").concat(query),{method:'DELETE',headers:{'Content-Type':'application/json'},body:JSON.stringify({files:fileKeys})});}}","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","listFiles","resp","fetch","concat","data","json","Array","isArray","files","map","f","key","size","lastModified","uploadFile","file","formData","FormData","append","filename","encodeURIComponent","name","method","body","deleteFiles","fileKeys","length","headers","JSON","stringify","query","join"],"sources":["/workspaces/codespaces-blank/ServerlessProject/frontend/src/api.js"],"sourcesContent":["const API_URL = process.env.REACT_APP_API_URL;\n\nexport async function listFiles() {\n  const resp = await fetch(`${API_URL}/files`);\n  const data = await resp.json();\n  // If files is an array of strings, convert to array of objects with dummy size/lastModified\n  if (Array.isArray(data.files) && typeof data.files[0] === 'string') {\n    return {\n      files: data.files.map(f => ({\n        key: f,\n        size: '-',\n        lastModified: '-'\n      }))\n    };\n  }\n  return data;\n}\n\nexport async function uploadFile(file) {\n  const formData = new FormData();\n  formData.append('file', file);\n  // Add filename as query param\n  const filename = encodeURIComponent(file.name);\n  return fetch(`${API_URL}/files?filename=${filename}`, {\n    method: 'POST',\n    body: formData,\n  });\n}\n\nexport async function deleteFiles(fileKeys) {\n  // If only one file, pass as single filename param\n  if (fileKeys.length === 1) {\n    const filename = encodeURIComponent(fileKeys[0]);\n    return fetch(`${API_URL}/files?filename=${filename}`, {\n      method: 'DELETE',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ files: fileKeys }),\n    });\n  } else {\n    // For multiple files, pass all as repeated query params (or just use body as before)\n    const query = fileKeys.map(f => `filename=${encodeURIComponent(f)}`).join('&');\n    return fetch(`${API_URL}/files?${query}`, {\n      method: 'DELETE',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ files: fileKeys }),\n    });\n  }\n}\n"],"mappings":"AAAA,KAAM,CAAAA,OAAO,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAE7C,MAAO,eAAe,CAAAC,SAASA,CAAA,CAAG,CAChC,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIP,OAAO,UAAQ,CAAC,CAC5C,KAAM,CAAAQ,IAAI,CAAG,KAAM,CAAAH,IAAI,CAACI,IAAI,CAAC,CAAC,CAC9B;AACA,GAAIC,KAAK,CAACC,OAAO,CAACH,IAAI,CAACI,KAAK,CAAC,EAAI,MAAO,CAAAJ,IAAI,CAACI,KAAK,CAAC,CAAC,CAAC,GAAK,QAAQ,CAAE,CAClE,MAAO,CACLA,KAAK,CAAEJ,IAAI,CAACI,KAAK,CAACC,GAAG,CAACC,CAAC,GAAK,CAC1BC,GAAG,CAAED,CAAC,CACNE,IAAI,CAAE,GAAG,CACTC,YAAY,CAAE,GAChB,CAAC,CAAC,CACJ,CAAC,CACH,CACA,MAAO,CAAAT,IAAI,CACb,CAEA,MAAO,eAAe,CAAAU,UAAUA,CAACC,IAAI,CAAE,CACrC,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAEH,IAAI,CAAC,CAC7B;AACA,KAAM,CAAAI,QAAQ,CAAGC,kBAAkB,CAACL,IAAI,CAACM,IAAI,CAAC,CAC9C,MAAO,CAAAnB,KAAK,IAAAC,MAAA,CAAIP,OAAO,qBAAAO,MAAA,CAAmBgB,QAAQ,EAAI,CACpDG,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEP,QACR,CAAC,CAAC,CACJ,CAEA,MAAO,eAAe,CAAAQ,WAAWA,CAACC,QAAQ,CAAE,CAC1C;AACA,GAAIA,QAAQ,CAACC,MAAM,GAAK,CAAC,CAAE,CACzB,KAAM,CAAAP,QAAQ,CAAGC,kBAAkB,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAChD,MAAO,CAAAvB,KAAK,IAAAC,MAAA,CAAIP,OAAO,qBAAAO,MAAA,CAAmBgB,QAAQ,EAAI,CACpDG,MAAM,CAAE,QAAQ,CAChBK,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CJ,IAAI,CAAEK,IAAI,CAACC,SAAS,CAAC,CAAErB,KAAK,CAAEiB,QAAS,CAAC,CAC1C,CAAC,CAAC,CACJ,CAAC,IAAM,CACL;AACA,KAAM,CAAAK,KAAK,CAAGL,QAAQ,CAAChB,GAAG,CAACC,CAAC,cAAAP,MAAA,CAAgBiB,kBAAkB,CAACV,CAAC,CAAC,CAAE,CAAC,CAACqB,IAAI,CAAC,GAAG,CAAC,CAC9E,MAAO,CAAA7B,KAAK,IAAAC,MAAA,CAAIP,OAAO,YAAAO,MAAA,CAAU2B,KAAK,EAAI,CACxCR,MAAM,CAAE,QAAQ,CAChBK,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CJ,IAAI,CAAEK,IAAI,CAACC,SAAS,CAAC,CAAErB,KAAK,CAAEiB,QAAS,CAAC,CAC1C,CAAC,CAAC,CACJ,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}